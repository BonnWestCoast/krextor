#!/bin/bash
# 
# krextor: runs the Krextor XML->RDF extractor
# 
# (c) Christoph Lange and KWARC 2008

SAXON_JAR=$HOME/svn/omdoc.org/trunk/thirdParty/saxon/saxon9.jar

function help {
cat <<EOF
Syntax: krextor IN..OUT FILE
Extracts RDF from the XML document FILE.  IN specifies the format of FILE; OUT
specifies the desired RDF serialization.

  -h, --help	Show this help
EOF
}

if [[ $# -lt 2 ]]
then
    help
    if [[ $1 == "h" || $1 == "--help" ]]
    then
	exit 0
    else
	exit 1
    fi
fi

format=$1
infile=$2

xml=${format%%..*}
rdf=${format##*..}

if [[ -z $xml || -z $rdf ]]
then
    help
    exit 2
fi

KREXTOR_BIN="$(which $0)"
if [[ -z "$KREXTOR_BIN" ]]
then
    KREXTOR_BIN="$0"
fi
while [[ -L "$KREXTOR_BIN" ]]
do
    KREXTOR_BIN="$(readlink -f $KREXTOR_BIN)"
done
KREXTOR_HOME="$(dirname "$KREXTOR_BIN")"
KREXTOR_HOME="$(cd "$KREXTOR_HOME/../src" ; pwd)"

transformer="$KREXTOR_HOME/transform-$xml-$rdf.xsl"

if [[ ! -r $transformer ]]
then
    xmlExtractor=$KREXTOR_HOME/extract/$xml.xsl
    rdfOutput=$KREXTOR_HOME/output/$rdf.xsl

    if [[ ! -e $xmlExtractor ]]
    then
	echo "no extraction module found for $xml format"
	exit 3
    fi

    if [[ ! -e $rdfOutput ]]
    then
	echo "no output module found for $rdf serialization"
	exit 4
    fi

    cat > /tmp/krextor.$$.xsl <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<!-- Template extracting $rdf from $xml, generated by Krextor -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    version="2.0">
    <xsl:import href="$rdfOutput"/>
    <xsl:include href="$xmlExtractor"/>
</xsl:stylesheet>
EOF
    transformer=/tmp/krextor.$$.xsl
fi

java -cp ${SAXON_JAR} net.sf.saxon.Transform $infile $transformer

[[ -e /tmp/krextor.$$.xsl ]] && rm /tmp/krextor.$$.xsl

